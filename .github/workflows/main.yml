name: Build and Publish

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [{ version: ubuntu-latest, suffix: Linux }, 
             { version: windows-latest, suffix: Windows }, 
             { version: macos-latest, suffix: OSX }]
    name: Build
    runs-on: ${{ matrix.os.version }}
    outputs:
      VERSION: ${{ steps.get_version.outputs.version }}
      HASH_LINUX: ${{ steps.get_hash_linux.outputs.hash }}
      HASH_OSX: ${{ steps.get_hash_osx.outputs.hash }}
      HASH_WINDOWS: ${{ steps.get_hash_windows.outputs.hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup HK
        uses: BadMagic100/setup-hk@v1
        with:
            apiPath: References/
            dependencyFilePath: ModDependencies.txt
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: "8"

      - name: Restore packages
        run: dotnet restore FakePeppino.csproj

      - name: Build project
        run: dotnet build --configuration Release

      - name: Get SHA256 of zipped mod Linux
        if: matrix.os.suffix == 'Linux'
        id: get_hash_linux
        run: echo "hash=$(sha256sum Output/FakePeppino_Linux.zip | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
    
      - name: Get SHA256 of zipped mod OSX
        if: matrix.os.suffix == 'OSX'
        id: get_hash_osx
        run: echo "hash=$(sha256sum Output/FakePeppino_OSX.zip | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Get SHA256 of zipped mod Windows
        if: matrix.os.suffix == 'Windows'
        id: get_hash_windows
        run: |
          certutil -hashfile Output/FakePeppino_Windows.zip SHA256 > out.txt
          $hash=(Get-Content -Path out.txt -TotalCount 2)[-1]
          echo "hash=$hash" >> $GITHUB_OUTPUT

      - name: Get Assembly version
        if: matrix.os.suffix != 'Windows'
        id: get_version
        run: echo "version=$(cat < Version.txt)" > $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FakePeppino_${{ matrix.os.suffix }}
          path: Output/FakePeppino_${{ matrix.os.suffix }}.zip
  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: FakePeppino_Linux
          path: ./

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: FakePeppino_OSX
          path: ./
      
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: FakePeppino_Windows
          path: ./

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: Output/FakePeppino_*.zip
          name: Release v${{ needs.build.outputs.VERSION }}
          body: |
            ## SHA256: 
            **Linux**: ${{ needs.build.outputs.HASH_LINUX }}
            **macOS**: ${{ needs.build.outputs.HASH_OSX }}
            **Windows**: ${{ needs.build.outputs.HASH_WINDOWS }}
          tag: ${{ needs.build.outputs.VERSION }}
      